#!/bin/bash

###############################################################################
# Argument Parsing
###############################################################################

[[ "$1" =~ ^-(h|-help)$ ]] && {
      cat <<EOF
usage: `basename $0` <MODE>
where <MODE>
   -c, --commit <HASH>             shows the authors ranking for a commit
   <FILE1> <FILE2> ... <FILEn>     shows the authors ranking for a list of files or directory (recursively)
EOF
   exit 0;
   }

if [[ "$1" =~ ^-(c|-commit)$ ]]; then
   [[ -n "$2" ]] || { echo "error: missing commit hash" >&2; exit 1; }
   FILES=`git fshow $2`
else
   FILES=$*
fi

###############################################################################
# Main
###############################################################################

function blamed
{
   git ls-files -z $* \
   | xargs -0n1 git blame -w 2> /dev/null \
   | perl -n -e '/^.*?\((.*?)\s+[\d]{4}/; print $1,"\n"' \
   | sort -f | uniq -c | sort -n -r
}

[[ -n "$FILES" ]] || echo "blaming for current directory (recursively)..."

blamed $FILES
